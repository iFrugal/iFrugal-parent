name: Build and Deploy to Maven Central

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # ðŸ”¹ This enables manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
      CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Create Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>central</id>
                <username>${CENTRAL_USERNAME}</username>
                <password>${CENTRAL_TOKEN}</password>
              </server>
              <server>
                <id>gpg.passphrase</id>
                <passphrase>${GPG_PASSPHRASE}</passphrase>
              </server>
            </servers>
          </settings>
          EOF

      - name: Extract Project Version
        id: version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Import GPG Key (only for releases)
        if: "!endsWith(steps.version.outputs.version, '-SNAPSHOT')"
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys

      - name: Deploy to Maven Central
        run: |
          if [[ "${{ steps.version.outputs.version }}" == *-SNAPSHOT ]]; then
            echo "Deploying SNAPSHOT version"
            mvn -B clean deploy -DskipTests -s ~/.m2/settings.xml
          else
            echo "Deploying RELEASE version"
            mvn -B clean deploy -DskipTests -Prelease -Dgpg.passphrase="${GPG_PASSPHRASE}" -s ~/.m2/settings.xml
          fi
